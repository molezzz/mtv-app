plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}



def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.mtv_app"
    compileSdk 36
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.mtv_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdk 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // 视频播放器优化配置
        multiDexEnabled true
        
        // ExoPlayer配置
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // 硬件解码优化
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    // Google Cast dependencies
    implementation 'com.google.android.gms:play-services-cast-framework:21.5.0'
    implementation 'androidx.mediarouter:mediarouter:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    
    // ExoPlayer dependencies for enhanced HLS/M3U8 support
    implementation 'androidx.media3:media3-exoplayer:1.2.1'
    implementation 'androidx.media3:media3-exoplayer-hls:1.2.1'
    implementation 'androidx.media3:media3-ui:1.2.1'
    implementation 'androidx.media3:media3-common:1.2.1'
    
    // Additional video format support
    implementation 'androidx.media3:media3-exoplayer-dash:1.2.1'
    implementation 'androidx.media3:media3-exoplayer-smoothstreaming:1.2.1'
    
    // 视频播放器增强支持和硬件解码优化
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.media3:media3-decoder:1.2.1'
    implementation 'androidx.media3:media3-datasource:1.2.1'
    implementation 'androidx.media3:media3-extractor:1.2.1'
    
    // 硬件加速支持
    implementation 'androidx.media3:media3-session:1.2.1'
}

flutter {
    source '../..'
}
